<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <ServiceWorkerAssetsManifest>service-worker-assets.js</ServiceWorkerAssetsManifest>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AngleSharp" Version="1.2.0" />
    <PackageReference Include="Blazored.LocalStorage" Version="4.5.0" />
    <PackageReference Include="KristofferStrube.Blazor.FileSystemAccess" Version="3.3.0" />
    <PackageReference Include="Markdig" Version="0.41.0" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="9.0.4" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="9.0.4" PrivateAssets="all" />
    <PackageReference Include="OpenAI" Version="2.1.0" />
    <PackageReference Include="TG.Blazor.IndexedDB" Version="1.5.0-preview" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\TableClothLite.Shared\TableClothLite.Shared.csproj" />
  </ItemGroup>

  <ItemGroup>
    <ServiceWorker Include="wwwroot\service-worker.js" PublishedContent="wwwroot\service-worker.published.js" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ViewModels\" />
    <Folder Include="wwwroot\data\" />
  </ItemGroup>

  <!-- ��� �� ����ȭ�� version.json �ڵ� ���� -->
  <Target Name="GenerateVersionJson" BeforeTargets="Build">
    <!-- Git ���� �������� -->
    <PropertyGroup>
      <BuildTimestamp>$([System.DateTime]::UtcNow.ToString("yyyy-MM-ddTHH:mm:ssZ"))</BuildTimestamp>
      <VersionString>$([System.DateTime]::UtcNow.ToString("yyyy.MM.dd.HHmm"))</VersionString>
    </PropertyGroup>
    
    <!-- Git commit hash �������� -->
    <Exec Command="git rev-parse HEAD" ContinueOnError="true" ConsoleToMSBuild="true" Condition="Exists('.git')">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitCommitHash" />
    </Exec>
    
    <!-- Git branch �������� -->
    <Exec Command="git rev-parse --abbrev-ref HEAD" ContinueOnError="true" ConsoleToMSBuild="true" Condition="Exists('.git')">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitBranchName" />
    </Exec>
    
    <!-- CI ȯ�濡���� �� ��� (GitHub Actions, Azure DevOps ��) -->
    <PropertyGroup>
      <GitCommit Condition="'$(GitCommitHash)' != ''">$(GitCommitHash)</GitCommit>
      <GitCommit Condition="'$(GitCommit)' == '' AND '$(BUILD_SOURCEVERSION)' != ''">$(BUILD_SOURCEVERSION)</GitCommit>
      <GitCommit Condition="'$(GitCommit)' == '' AND '$(GITHUB_SHA)' != ''">$(GITHUB_SHA)</GitCommit>
      <GitCommit Condition="'$(GitCommit)' == ''">local-build</GitCommit>
      
      <GitBranch Condition="'$(GitBranchName)' != ''">$(GitBranchName)</GitBranch>
      <GitBranch Condition="'$(GitBranch)' == '' AND '$(BUILD_SOURCEBRANCH)' != ''">$(BUILD_SOURCEBRANCH)</GitBranch>
      <GitBranch Condition="'$(GitBranch)' == '' AND '$(GITHUB_REF_NAME)' != ''">$(GITHUB_REF_NAME)</GitBranch>
      <GitBranch Condition="'$(GitBranch)' == ''">main</GitBranch>
    </PropertyGroup>
    
    <!-- ����ȭ�� JSON ���� ���� -->
    <PropertyGroup>
      <VersionJsonContent>
{
  "version": "$(VersionString)",
  "buildDate": "$(BuildTimestamp)",
  "commit": "$(GitCommit)",
  "branch": "$(GitBranch)"
}
      </VersionJsonContent>
    </PropertyGroup>
    
    <WriteLinesToFile File="$(MSBuildProjectDirectory)\wwwroot\version.json" Lines="$(VersionJsonContent)" Overwrite="true" />
    
    <Message Text="Generated simplified version.json with version $(VersionString)" Importance="high" />
  </Target>

</Project>
