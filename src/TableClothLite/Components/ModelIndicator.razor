@using TableClothLite.Services
@using TableClothLite.Shared.Models

<div class="model-indicator @(HasApiKey ? "" : "disabled")" @onclick="OnModelClick" title="@(HasApiKey ? "클릭하여 AI 모델 설정 변경" : "로그인 후 사용 가능")">
    <span class="model-icon">🤖</span>
    <span class="model-name">@GetModelDisplayName()</span>
    @if (HasApiKey)
    {
        <span class="settings-icon">⚙️</span>
    }
    else
    {
        <span class="lock-icon">🔒</span>
    }
</div>

<style>
    .model-indicator {
        display: flex;
        align-items: center;
        gap: 6px;
        padding: 4px 8px;
        margin: 4px 0;
        background: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: 6px;
        cursor: pointer;
        transition: all 0.2s ease;
        font-size: 12px;
        user-select: none;
        color: #6c757d;
        min-height: 24px;
    }

    .model-indicator:hover:not(.disabled) {
        background: #e9ecef;
        border-color: #007bff;
        color: #007bff;
    }

    .model-indicator.disabled {
        opacity: 0.6;
        cursor: not-allowed;
        background: #f8f9fa;
    }

    .model-icon {
        font-size: 14px;
        flex-shrink: 0;
    }

    .model-name {
        font-weight: 500;
        color: inherit;
        line-height: 1;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        flex: 1;
    }

    .settings-icon, .lock-icon {
        font-size: 12px;
        color: inherit;
        flex-shrink: 0;
        opacity: 0.7;
    }

    .model-indicator:hover:not(.disabled) .settings-icon,
    .model-indicator:hover:not(.disabled) .lock-icon {
        opacity: 1;
    }

    /* 모바일 최적화 */
    @@media (max-width: 480px) {
        .model-indicator {
            font-size: 11px;
            padding: 3px 6px;
            gap: 4px;
            min-height: 20px;
        }

        .model-icon {
            font-size: 12px;
        }

        .settings-icon, .lock-icon {
            font-size: 10px;
        }
    }
</style>

@code {
    [Parameter] public bool HasApiKey { get; set; }
    [Parameter] public EventCallback OnOpenSettings { get; set; }
    [Parameter] public EventCallback OnLogin { get; set; }

    [Inject] private ConfigService ConfigService { get; set; } = default!;

    private SandboxConfig? _currentConfig;

    protected override async Task OnInitializedAsync()
    {
        await LoadCurrentConfig();
    }

    protected override async Task OnParametersSetAsync()
    {
        // API 키 상태가 변경되면 설정 다시 로드
        if (HasApiKey && _currentConfig is null)
        {
            await LoadCurrentConfig();
        }
    }

    private async Task LoadCurrentConfig()
    {
        try
        {
            _currentConfig = await ConfigService.LoadAsync();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"모델 설정 로드 중 오류: {ex.Message}");
            // 기본값 사용
            _currentConfig = new SandboxConfig();
        }
    }

    private string GetModelDisplayName()
    {
        if (!HasApiKey)
        {
            return "AI 모델";
        }

        if (_currentConfig is null)
        {
            return "로딩중...";
        }

        // 모델 이름을 사용자 친화적으로 변환 (더 짧게)
        return _currentConfig.OpenRouterModel;
    }

    private async Task OnModelClick()
    {
        if (!HasApiKey)
        {
            await OnLogin.InvokeAsync();
        }
        else
        {
            await OnOpenSettings.InvokeAsync();
        }
    }

    // 외부에서 설정 변경 후 호출할 수 있는 메서드
    public async Task RefreshConfig()
    {
        await LoadCurrentConfig();
    }
}