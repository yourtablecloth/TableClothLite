@using Microsoft.JSInterop

<div class="wsb-download-guide-modal" @onclick="HandleBackdropClick">
    <div class="modal-content" @onclick:stopPropagation="true">
        <div class="modal-header">
            <h3>WSB 다운로드</h3>
            <button class="close-btn" @onclick="Close" type="button">✕</button>
        </div>
        
        <div class="modal-body">
            <div class="guide-content">
                <div class="icon-section">
                    <span class="info-icon">📦</span>
                    <h4>@ServiceDisplayName</h4>
                </div>
                
                <div class="info-box">
                    <p><strong>Windows Sandbox 파일 다운로드</strong></p>
                    <p>WSB 파일을 다운로드하거나 사이트에 직접 접속할 수 있습니다.</p>
                </div>
                
                <div class="action-buttons">
                    <button class="btn btn-primary btn-download" @onclick="DownloadWsb" type="button">
                        <span class="btn-icon">📥</span>
                        <span class="btn-text">WSB 다운로드</span>
                    </button>
                    
                    @if (!string.IsNullOrEmpty(ServiceUrl))
                    {
                        <button class="btn btn-secondary btn-open" @onclick="OpenServiceUrl" type="button">
                            <span class="btn-icon">🌐</span>
                            <span class="btn-text">새 창으로 열기</span>
                        </button>
                    }
                </div>
                
                <div class="info-note">
                    <p>💡 <strong>WSB 파일이란?</strong></p>
                    <p>Windows Sandbox 설정 파일로, Windows 10/11에서 안전한 샌드박스 환경을 제공합니다.</p>
                </div>
            </div>
        </div>
        
        <div class="modal-footer">
            <button class="btn btn-cancel" @onclick="Close" type="button">
                닫기
            </button>
        </div>
    </div>
</div>

<style>
    .wsb-download-guide-modal {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.6);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10000;
        padding: 20px;
        padding-top: max(20px, calc(var(--safe-area-inset-top) + 20px));
        padding-right: max(20px, calc(var(--safe-area-inset-right) + 20px));
        padding-bottom: max(20px, calc(var(--safe-area-inset-bottom) + 20px));
        padding-left: max(20px, calc(var(--safe-area-inset-left) + 20px));
    }

    .modal-content {
        background: var(--modal-bg, white);
        border-radius: 16px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
        max-width: 500px;
        width: 100%;
        max-height: 90vh;
        overflow-y: auto;
        animation: modalSlideIn 0.3s ease-out;
    }

    @@keyframes modalSlideIn {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .modal-header {
        padding: 20px 24px;
        border-bottom: 1px solid var(--border-color, #e9ecef);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .modal-header h3 {
        margin: 0;
        color: var(--primary-text, #2c3e50);
        font-size: 20px;
        font-weight: 600;
    }

    .close-btn {
        background: none;
        border: none;
        font-size: 24px;
        cursor: pointer;
        color: var(--secondary-text, #6c757d);
        padding: 0;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 4px;
        transition: all 0.2s ease;
    }

    .close-btn:hover {
        background: var(--hover-bg, #f8f9fa);
        color: var(--primary-text, #2c3e50);
    }

    .modal-body {
        padding: 24px;
    }

    .guide-content {
        display: flex;
        flex-direction: column;
        gap: 24px;
    }

    .icon-section {
        text-align: center;
    }

    .icon-section .info-icon {
        font-size: 48px;
        display: block;
        margin-bottom: 12px;
    }

    .icon-section h4 {
        margin: 0;
        color: var(--primary-text, #2c3e50);
        font-size: 18px;
        font-weight: 600;
    }

    .info-box {
        background: linear-gradient(135deg, #667eea22 0%, #764ba222 100%);
        border-left: 4px solid #667eea;
        padding: 16px;
        border-radius: 8px;
    }

    .info-box p {
        margin: 0 0 8px 0;
        color: var(--primary-text, #2c3e50);
        line-height: 1.6;
    }

    .info-box p:last-child {
        margin-bottom: 0;
    }

    .action-buttons {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }

    .btn {
        padding: 14px 24px;
        border-radius: 8px;
        border: none;
        cursor: pointer;
        font-size: 16px;
        font-weight: 600;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

    .btn-icon {
        font-size: 20px;
    }

    .btn-primary {
        background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        color: white;
        box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, #0056b3 0%, #004085 100%);
        transform: translateY(-2px);
        box-shadow: 0 6px 16px rgba(0, 123, 255, 0.4);
    }

    .btn-secondary {
        background: linear-gradient(135deg, #6c757d 0%, #5a6268 100%);
        color: white;
        box-shadow: 0 4px 12px rgba(108, 117, 125, 0.3);
    }

    .btn-secondary:hover {
        background: linear-gradient(135deg, #5a6268 0%, #545b62 100%);
        transform: translateY(-2px);
        box-shadow: 0 6px 16px rgba(108, 117, 125, 0.4);
    }

    .info-note {
        background: var(--note-bg, #f8f9fa);
        padding: 16px;
        border-radius: 8px;
        border: 1px solid var(--border-color, #e9ecef);
    }

    .info-note p {
        margin: 0 0 8px 0;
        color: var(--primary-text, #2c3e50);
        font-size: 14px;
        line-height: 1.6;
    }

    .info-note p:last-child {
        margin-bottom: 0;
    }

    .modal-footer {
        padding: 16px 24px 24px;
        border-top: 1px solid var(--border-color, #e9ecef);
        display: flex;
        justify-content: center;
    }

    .btn-cancel {
        padding: 10px 24px;
        border-radius: 6px;
        border: 1px solid var(--border-color, #dee2e6);
        cursor: pointer;
        font-size: 14px;
        font-weight: 500;
        transition: all 0.2s ease;
        background: var(--modal-bg, white);
        color: var(--secondary-text, #6c757d);
    }

    .btn-cancel:hover {
        background: var(--hover-bg, #f8f9fa);
        border-color: var(--secondary-text, #6c757d);
        transform: translateY(-1px);
    }

    @@media (max-width: 768px) {
        .wsb-download-guide-modal {
            padding: 10px;
            padding-top: max(10px, calc(var(--safe-area-inset-top) + 10px));
            padding-right: max(10px, calc(var(--safe-area-inset-right) + 10px));
            padding-bottom: max(10px, calc(var(--safe-area-inset-bottom) + 10px));
            padding-left: max(10px, calc(var(--safe-area-inset-left) + 10px));
        }

        .modal-content {
            max-height: 95vh;
            max-height: calc(100vh - max(20px, var(--safe-area-inset-top) + var(--safe-area-inset-bottom) + 20px));
        }

        .modal-header, .modal-body, .modal-footer {
            padding-left: 16px;
            padding-right: 16px;
        }

        .icon-section .info-icon {
            font-size: 40px;
        }
    }
</style>

@code {
    [Parameter] public string? ServiceUrl { get; set; }
    [Parameter] public string? ServiceDisplayName { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnDownloadWsb { get; set; }

    [Inject] private IJSRuntime JSRuntime { get; set; } = default!;

    private async Task Close()
    {
        await OnClose.InvokeAsync();
    }

    private async Task HandleBackdropClick()
    {
        await Close();
    }

    private async Task DownloadWsb()
    {
        await OnDownloadWsb.InvokeAsync();
        await Close();
    }

    private async Task OpenServiceUrl()
    {
        if (!string.IsNullOrEmpty(ServiceUrl))
        {
            await JSRuntime.InvokeVoidAsync("open", ServiceUrl, "_blank");
        }
    }
}
